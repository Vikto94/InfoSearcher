package searcher;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.PerFieldAnalyzerWrapper;
import org.apache.lucene.analysis.StopAnalyzer;
import org.apache.lucene.analysis.WhitespaceAnalyzer;
import org.apache.lucene.analysis.en.EnglishAnalyzer;
import org.apache.lucene.analysis.ru.RussianAnalyzer;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.morphology.EnglishLuceneMorphology;
import org.apache.lucene.morphology.LuceneMorphology;
import org.apache.lucene.util.Version;



public class TokenSearcher {
	private final HashSet<String> morphemeInFile = new HashSet<String>();
	
	   private static final Analyzer[] analyzers = new Analyzer[]{  
           new EnglishAnalyzer(Version.LUCENE_31),  
           new RussianAnalyzer(Version.LUCENE_31),  
           new StopAnalyzer(Version.LUCENE_31),  
           new StandardAnalyzer(Version.LUCENE_31)  
   };  
 	
	
	TokenSearcher (String fileName) throws FileNotFoundException{
		Scanner in = new Scanner(new File(fileName));
		String word = "";
		while (in.hasNext()) {
			word = in.next();
			morphemeInFile.add(word);
		}
		for (String morpheme : morphemeInFile){
			System.out.print("\nw: " + morpheme);
		}
		in.close();
	}
	
	public boolean isFind (String token){
		return false;
	}
}
